<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Packages, headers, libraries</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"/><LINK
REL="HOME"
TITLE="ooc v0.2.1 ninja Language Reference"
HREF="book1.htm"/><LINK
REL="PREVIOUS"
TITLE="Operators"
HREF="c395.htm"/><LINK
REL="NEXT"
TITLE="C headers"
HREF="x536.htm"/></HEAD
><BODY
CLASS="chapter"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>ooc v0.2.1 ninja Language Reference</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="c395.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x536.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"/></DIV
><DIV
CLASS="chapter"
><H1
><A
NAME="AEN516"
></A
>Chapter 6. Packages, headers, libraries</H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
><A
HREF="c516.htm#AEN521"
>ooc packages</A
></DT
><DT
><A
HREF="x536.htm"
>C headers</A
></DT
><DT
><A
HREF="x549.htm"
>Automagic library management</A
></DT
></DL
></DIV
><P
>ooc doesn't share C++'s affection for C-style headers. Source files,
    (called 'units'), are organized into folders (called 'packages'), much
    like Java packages without the hassle.<A
NAME="AEN519"
HREF="#FTN.AEN519"
><SPAN
CLASS="footnote"
>[1]</SPAN
></A
></P
><DIV
CLASS="section"
><H1
CLASS="section"
><A
NAME="AEN521"
>ooc packages</A
></H1
><P
>There is no <TT
CLASS="literal"
>package</TT
> keyword. The package of a
      source unit is relative to the sourcepath. You can import units from
      packages with the <TT
CLASS="literal"
>import</TT
> keyword. For example, let's
      say we have a Talker unit:</P
><PRE
CLASS="programlisting"
>class Talker {

  func new;

  func drool {
    printf("Mwahahaha\n");
  }

  static func say(String message) {
    printf("Jacadi a dit: %s\n", message);
  }

}</PRE
><P
>Let's say the Talker.ooc file is located in
      <TT
CLASS="filename"
>io/spoken/Talker.ooc</TT
> relative to the sourcepath. If
      we have an <TT
CLASS="filename"
>io/spoken/User.ooc</TT
> unit, we can use
      Talker like that:</P
><PRE
CLASS="programlisting"
>import Talker;
// or
import io.spoken.Talker;

func blah {
  Talker.say("Blah, blah, blah\n");
}</PRE
><P
>You can use the super keyword to refer to a package which is
      higher in the hierarchy, e.g. let's say we have a
      <TT
CLASS="filename"
>io/Tube.ooc</TT
> unit, we can refer to it in
      <TT
CLASS="filename"
>io/spoken/User.ooc</TT
> as:</P
><PRE
CLASS="programlisting"
>import io.Tube; // fully qualified name
// or
import super.Tube; // relative name</PRE
><P
>The relative form is often preferred, as it facilitate
      refactoring.</P
></DIV
></DIV
><H3
CLASS="FOOTNOTES"
>Notes</H3
><TABLE
BORDER="0"
CLASS="FOOTNOTES"
WIDTH="100%"
><TR
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="5%"
><A
NAME="FTN.AEN519"
HREF="c516.htm#AEN519"
><SPAN
CLASS="footnote"
>[1]</SPAN
></A
></TD
><TD
ALIGN="LEFT"
VALIGN="TOP"
WIDTH="95%"
><P
>What is the hassle with Java packages? You have to declare a
        class in a file with exactly the same name, and you have to put a a
        package declaration into each .java source file, corresponding exactly
        to your class file. While it is certainly safer, it's also much more
        redundant, and thus ooc has adopted a more relax approach.</P
></TD
></TR
></TABLE
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"/><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="c395.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x536.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Operators</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>C headers</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>