<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Callbacks and pointers</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"/><LINK
REL="HOME"
TITLE="ooc v0.2.1 ninja Language Reference"
HREF="book1.htm"/><LINK
REL="UP"
TITLE="Functions"
HREF="c226.htm"/><LINK
REL="PREVIOUS"
TITLE="Calling functions"
HREF="x244.htm"/><LINK
REL="NEXT"
TITLE="Covers"
HREF="x270.htm"/></HEAD
><BODY
CLASS="section"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>ooc v0.2.1 ninja Language Reference</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="x244.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Chapter 2. Functions</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x270.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"/></DIV
><DIV
CLASS="section"
><H1
CLASS="section"
><A
NAME="AEN253"
>Callbacks and pointers</A
></H1
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="AEN255"
>Simple case</A
></H2
><P
>In ooc, functions are almost-first-class-citizens. You can pass
        pointer to functions around easily:</P
><PRE
CLASS="programlisting"
>func main {

  call(@kotokoSpeak);

}

func kotokoSpeak {

  printf("We have a very big problem!\n");

}

func call(Func toCall) {

  toCall();

}</PRE
><P
>Since mentioning a function's name without parenthesis is enough
        to call it, the '<TT
CLASS="literal"
>@</TT
>' prefix is added before the
        function name to indicate that we want a pointer to it, not to execute
        it. This distinction is justified if you consider that a function
        could itself return a pointer to function, thus you can't let the
        compiler guess whether or not to call the function.</P
><P
>'<TT
CLASS="literal"
>@</TT
>' doesn't work the same as
        '<TT
CLASS="literal"
>&amp;</TT
>' in C. For example, the Gtk class as a
        function mainQuit, and it's a common idiom in a gtk program to
        do:</P
><PRE
CLASS="programlisting"
>window.connectNaked("destroy", Gtk.@mainQuit);</PRE
><P
>This ensures that Gtk.mainQuit() is called when the window is
        destroyed.</P
></DIV
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="AEN266"
>Pointer to member functions</A
></H2
><P
>This case is treated in <A
HREF="c278.htm"
>this
        chapter</A
>.</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"/><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="x244.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x270.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>Calling functions</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="c226.htm"
ACCESSKEY="U"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Covers</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>