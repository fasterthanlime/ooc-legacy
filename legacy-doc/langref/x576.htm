<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">
<HTML
><HEAD
><TITLE
>Classes</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.79"/><LINK
REL="HOME"
TITLE="ooc v0.2.1 ninja Language Reference"
HREF="book1.htm"/><LINK
REL="UP"
TITLE="ABI (Application Binary Interface)"
HREF="a564.htm"/><LINK
REL="PREVIOUS"
TITLE="ABI (Application Binary Interface)"
HREF="a564.htm"/><LINK
REL="NEXT"
TITLE="Name mangling"
HREF="x593.htm"/></HEAD
><BODY
CLASS="section"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>ooc v0.2.1 ninja Language Reference</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="a564.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
>Appendix A. ABI (Application Binary Interface)</TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="x593.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"/></DIV
><DIV
CLASS="section"
><H1
CLASS="section"
><A
NAME="AEN576"
>Classes</A
></H1
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="AEN578"
>Structs in memory</A
></H2
><P
>Classes are implemented with two C structs : the 'meta-class'
        structure, and the 'class structure'.</P
><P
>The 'meta-class structure' exists in one copy in memory for each
        defined class. It contains all the information which is shared between
        instances of a class, such as function pointers to the right
        implementation of functions.</P
><P
>The 'class structure' is allocated for each instance of a class.
        It contains first a pointer (void*) to the meta-class structure, and
        then a list of fields.</P
></DIV
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="AEN583"
>Order of fields in structs</A
></H2
><P
>Since a child class (a class that inherits from a base class)
        only add member variables and functions, its structs begin with
        exactly the same field order as its parent, and then its own member
        variables/functions are added. This allows seamless C casts, which are
        basically free from a performance point of view.</P
></DIV
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="AEN586"
>Functions and constructors</A
></H2
><P
>Member functions are pointer to functions in the 'meta-class
        structure'. They are assigned to in constructors. Constructors aren't
        listed in the meta-class structure, nor are the rest of static
        functions.</P
></DIV
><DIV
CLASS="section"
><H2
CLASS="section"
><A
NAME="AEN589"
>Static fields</A
></H2
><P
>Static fields must be implemented as externally-scoped variable
        for non-const fields, and with <TT
CLASS="literal"
>#define</TT
>s for const
        fields.</P
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"/><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="a564.htm"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="book1.htm"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="x593.htm"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>ABI (Application Binary Interface)</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="a564.htm"
ACCESSKEY="U"
>Up</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
>Name mangling</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>